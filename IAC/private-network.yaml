AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters: 
  EnvironmentName:
     Description: An Environment name that will be prefixed to resources
     Type: String
  VpcCIDR:
     Description: An Environment name that will be prefixed to resources
     Type: String
  
  PrivateSubnet1CIDR:
     Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
     Type: String
     Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
      Type: String
      Default: 10.0.3.0/24
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
      Tags:
      - Key: name
        Value: !Ref EnvironmentName
  myVPNGateway: 
    Type: AWS::EC2::VPNGateway
    Properties: 
        Type: ipsec.1
        Tags: 
        - Key: name
          Value: !Ref EnvironmentName
  myAttachVpnGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      VpnGatewayId:
        Ref: myVPNGateway
  myPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: name
        Value: !Sub ${EnvironmentName} myPrivateSubnet1
  myPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
      - Key: name
        Value: !Sub ${EnvironmentName} myPrivateSubnet2

  
  PrivateRouteTable1 :
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: name
        Value: !Sub ${EnvironmentName} Private Route 1
  PrivateRouteTable2 :
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: name
        Value: !Sub ${EnvironmentName} Private Route 2

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route   
    DependsOn: myAttachVpnGateway   
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myVPNGateway
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: myAttachVpnGateway 
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myVPNGateway

  myPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: myPrivateSubnet1
      RouteTableId:
        Ref: PrivateRouteTable1
  myPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: myPrivateSubnet2
      RouteTableId:
        Ref: PrivateRouteTable2
      
  myCustomerGateway: 
    Type: AWS::EC2::CustomerGateway
    Properties: 
        Type: ipsec.1
        BgpAsn: 65534
        IpAddress: 12.1.2.3
  myVPNConnection: 
    Type: AWS::EC2::VPNConnection
    Properties: 
      Type: ipsec.1
      StaticRoutesOnly: true
      CustomerGatewayId: 
        !Ref myCustomerGateway
      VpnGatewayId: 
        !Ref myVPNGateway

Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref myVPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref PrivateRouteTable1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2:
        Description: Private Routing AZ2
        Value: !Ref PrivateRouteTable2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-RT

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref myPrivateSubnet1, !Ref myPrivateSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref myPrivateSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-SN

    PrivateSubnet2: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref myPrivateSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-SN